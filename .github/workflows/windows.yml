# Licensed under the GNU General Public License v. 3 (the "License")
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.gnu.org/licenses/gpl-3.0.html
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Copyright (C) 2022-2024 xqyjlj<xqyjlj@126.com>
#
# @author      xqyjlj
# @file        windows.yml
#
# Change Logs:
# Date           Author       Notes
# ------------   ----------   -----------------------------------------------
# 2024-11-04     xqyjlj       initial version
#

name: windows

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: üß™ test
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - python_version: 3.10.11
    env:
      QT_ASSUME_STDERR_HAS_CONSOLE: 1
      CI_PROJECT_DIR: ${{ github.workspace }}
    steps:
      - name: ‚¨áÔ∏è checkout csp
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1

      - name: ‚¨áÔ∏è setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: ‚¨áÔ∏è install python packages
        shell: bash
        run: |
          pip3 install -r requirements.txt

      - name: üë∑ unit-test
        shell: bash
        run: |
          python3 unit-test.py

  release:
    name: ‚¨ÜÔ∏è release
    runs-on: windows-latest
    needs: [ test ]
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        include:
          - python_version: 3.10.11
    env:
      QT_ASSUME_STDERR_HAS_CONSOLE: 1
      CI_PROJECT_DIR: ${{ github.workspace }}
      GITHUB_CSPLINK_DEVELOPER_TOKEN: ${{ github.token }}
    steps:
      - name: ‚¨áÔ∏è checkout csp
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1

      - name: ‚¨áÔ∏è setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: ‚¨áÔ∏è install python packages
        shell: bash
        run: |
          pip3 install -r requirements.txt
          pip3 install nuitka
          python -m nuitka --version

      - name: üî® build & deploy
        shell: bash
        run: |
          source tools/deploy.sh && deploy windows csp-windows-${{ github.ref_name }}
          7z a -tzip -mx=9 csp-windows-${{ github.ref_name }}.zip csp-windows-${{ github.ref_name }}
          sed -i 's/latest/${{ github.ref_name }}/g' ./win-installer.nsi
          pushd csp-windows-${{ github.ref_name }} && makensis -V4 -NOCD ../win-installer.nsi && popd
          mv -fv csp-windows-${{ github.ref_name }}/csp-windows-${{ github.ref_name }}.exe .

      - name: ‚¨ÜÔ∏è create release
        uses: softprops/action-gh-release@v2
        with:
          name: csp ${{ github.ref_name }}
          draft: true
          prerelease: true
          token: ${{ secrets.RELEASE_TOKEN }}
          files: |
            csp-windows-${{ github.ref_name }}.zip
            csp-windows-${{ github.ref_name }}.exe
